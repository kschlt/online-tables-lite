flowchart TD
    %% Entry Point
    UserTrigger["User: 'commit', 'save changes'"]
    ClaudeDetects["ü§ñ Claude detects trigger"]
    ClaudeExec["ü§ñ Claude executes: make commit"]

    %% Makefile Validation
    CheckStaged{Staged files exist?}
    CheckUnstaged{Unstaged files exist?}

    %% STOP CONDITIONS (Terminal Messages Only)
    NoChanges["‚ÑπÔ∏è STOP: Working tree clean<br/>Terminal: No changes to commit<br/>WORKFLOW COMPLETE"]

    %% INTEGRATED STAGING FUNCTIONS (Part of Commit Workflow)
    AnalyzeChanges["Analyze changes:<br/>‚Ä¢ Count staged/unstaged/untracked<br/>‚Ä¢ Apply file patterns (.md,.js,.py,...)<br/>‚Ä¢ Filter ignore patterns (node_modules,...)"]
    CheckRelevant{Relevant files detected?}
    AutoStage["Auto-stage relevant files<br/>Business logic: Standard dev files"]
    AgentStaging["ü§ñ Agent reviews & stages files<br/>Complex case: Mixed file types"]
    NoRelevantStop["‚ö†Ô∏è WARNING: No relevant files detected<br/>Terminal: Either no changes or only ignored/binary files<br/>USER ACTION: Check git status, use git add manually if needed"]

    %% Message Generation & Validation Loop
    CollectContext["Collect commit context:<br/>‚Ä¢ git-cliff preview<br/>‚Ä¢ Diff summary<br/>‚Ä¢ Allowed commit types"]
    ClaudeGenerates["ü§ñ Claude generates commit message"]
    ValidateFormat{Message format valid?}
    FormatFeedback["ü§ñ Claude fixes message with validation feedback"]

    %% Commit Execution
    ExecuteCommit["Execute commit with validated message"]

    %% PRE-COMMIT HOOKS (Simplified Black Box)
    subgraph PreCommitBox ["üîß PRE-COMMIT HOOKS<br/>üìÑ <i>See: .git/hooks/pre-commit</i>"]
        direction TB
        HookBlackBox["Hook automation handling:<br/>‚Ä¢ Code formatting (prettier, ruff)<br/>‚Ä¢ Linting & style checks<br/>‚Ä¢ Type checking & validation"]
    end

    %% Final Outcome
    WorkflowComplete["Workflow Complete"]

    %% Flow Connections
    UserTrigger --> ClaudeDetects
    ClaudeDetects --> ClaudeExec
    ClaudeExec --> CheckStaged

    %% Staging Logic
    CheckStaged -->|No| CheckUnstaged
    CheckStaged -->|Yes| CollectContext
    CheckUnstaged -->|No| NoChanges
    CheckUnstaged -->|Yes| AnalyzeChanges

    %% Staging Decision Flow
    AnalyzeChanges --> CheckRelevant
    CheckRelevant -->|Yes - Simple| AutoStage
    CheckRelevant -->|Yes - Complex| AgentStaging
    CheckRelevant -->|No| NoRelevantStop
    AutoStage --> CollectContext
    AgentStaging --> CollectContext

    %% Message Generation & Validation Loop
    CollectContext --> ClaudeGenerates
    ClaudeGenerates --> ValidateFormat
    ValidateFormat -->|Invalid| FormatFeedback
    FormatFeedback --> ValidateFormat
    ValidateFormat -->|Valid| ExecuteCommit

    %% Commit Execution & Completion
    ExecuteCommit --> PreCommitBox
    PreCommitBox --> WorkflowComplete

    %% Styling - Consistent with PR Workflow
    UserTrigger@{ shape: rect}
    AnalyzeChanges:::automationStep
    CheckRelevant:::automationStep
    AutoStage:::automationStep
    AgentStaging:::agentLayer
    NoRelevantStop:::stopNode
    HookBlackBox:::blackBoxStep
    UserTrigger:::userLayer
    ClaudeDetects:::agentLayer
    ClaudeExec:::agentLayer
    CheckStaged:::automationStep
    CheckUnstaged:::automationStep
    NoChanges:::stopNode
    CollectContext:::automationStep
    ClaudeGenerates:::agentLayer
    ValidateFormat:::automationStep
    FormatFeedback:::agentLayer
    ExecuteCommit:::automationStep
    PreCommitBox:::subgraphStyle
    WorkflowComplete:::successNode

    classDef userLayer fill:#e1f5fe
    classDef agentLayer fill:#f3e5f5
    classDef automationStep fill:#fff3e0
    classDef stopNode fill:#ffcdd2
    classDef blackBoxStep fill:#f5f5f5
    classDef successNode fill:#a5d6a7
    classDef subgraphStyle fill:#f9f9f9,stroke:#666,stroke-width:2px,stroke-dasharray: 5 5