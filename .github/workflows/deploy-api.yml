name: Deploy API (Fly.io)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging
  push:
    branches: [ production ]
    paths:
      - 'apps/api/**'
      - '.github/workflows/deploy-api.yml'

permissions:
  contents: read

jobs:
  pre-deployment-checks:
    name: Pre-deployment Validation
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/api

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run linting checks
        run: ruff check .

      - name: Run formatting checks
        run: ruff format --check .

      - name: Validate API structure
        run: |
          python -c "import app; print('‚úÖ API structure validation passed')"

      - name: Test API startup (dry run)
        run: |
          python -c "
          import sys
          sys.path.append('.')
          try:
              from app.main import app
              print('‚úÖ API can be imported successfully')
          except Exception as e:
              print(f'‚ùå API import failed: {e}')
              sys.exit(1)
          "

  deploy:
    name: Deploy to Fly.io
    runs-on: ubuntu-latest
    needs: pre-deployment-checks
    defaults:
      run:
        working-directory: apps/api

    environment: 
      name: ${{ github.event.inputs.environment || 'production' }}

    steps:
      - uses: actions/checkout@v4

      - name: Install Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@v1

      - name: Deploy to Fly.io
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: flyctl deploy --remote-only

      - name: Deployment Summary
        run: |
          echo "üöÄ API deployment completed successfully!"
          echo "Environment: ${{ github.event.inputs.environment || 'production' }}"
          echo "‚úÖ API is now live on Fly.io"
