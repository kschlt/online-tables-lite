#!/bin/bash

# Pre-push hook for Online Tables Lite (Husky)
# Updates docs and creates PR when pushing feature branches

set -e  # Exit on any error

# Get current branch and remote info
BRANCH=$(git rev-parse --abbrev-ref HEAD)
REMOTE=$1
URL=$2

echo "üöÄ Pre-push hook: Branch '$BRANCH' pushing to '$REMOTE'"

# Skip hook for protected branches (these should go through PR process anyway)
if [[ "$BRANCH" == "main" || "$BRANCH" == "production" ]]; then
    echo "‚ÑπÔ∏è  Skipping pre-push hook for protected branch '$BRANCH'"
    exit 0
fi

# Skip if not pushing to origin (might be pushing to different remote)
if [[ "$REMOTE" != "origin" ]]; then
    echo "‚ÑπÔ∏è  Skipping pre-push hook for remote '$REMOTE' (not origin)"
    exit 0
fi

# Check if we're in the correct directory (project root)
if [ ! -f "Makefile" ]; then
    echo "‚ùå Error: Not in project root directory. Pre-push hook expects to run from project root."
    exit 1
fi

echo "üìö Running streamlined PR creation workflow..."

# Lightweight verification - all quality checks and changelog updates handled by pre-commit
echo "‚úÖ Quality checks and CHANGELOG.md updates handled by pre-commit hook"

# Simple verification that we have the expected commit cache
CACHE_FILE=".git/commit-cache/last-commit-meta"
if [ -f "$CACHE_FILE" ]; then
    echo "‚ö° Commit metadata available from pre-commit hook"
else
    echo "‚ö†Ô∏è  No commit cache found - this may indicate pre-commit hook issues"
fi

# Continue the promptlet chain for PR creation after successful push
echo "‚úÖ Pre-push verification complete!"
echo "üì§ Push will proceed..."

# After push succeeds, generate promptlet for PR creation workflow
cat << 'EOF'
{
  "task": {
    "type": "pr_creation_workflow",
    "instructions": [
      "Create pull request with comprehensive description using git-cliff changelog",
      "Generate intelligent PR title based on branch work and changes",
      "Execute the complete PR creation process including validation"
    ],
    "context": {
      "branch": "'"$BRANCH"'",
      "push_successful": true,
      "changelog_updated": true,
      "workflow_stage": "post_push_pr_creation"
    },
    "next_step": "./scripts/agent/workflows/pr-workflow.sh pr_body --branch '"$BRANCH"'"
  }
}
EOF